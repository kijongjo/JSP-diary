src 폴더에서 HTML 파일을 새로 만든 후에 
1)httpservlet을 class 상속 
2)doGet() 또는 doPost() method override 
3)내가 만든 프로그램 등록 
4)@WebServlet("/주소")사용


*응답,요청 객체 사용 
req : 사용자의 요청 객체 
resp: 서버의 응답 객체 



ex)
@WebServlet("/Hello.html") <-/를 빼먹으면 안된다. 다른 서버와 중복된 이름을 가지면 안된다. 
public class HelloServlet extends HttpServlet {
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
resp.setCharacterEncoding("UTF-8");  <- 한글 사용을 위함. 
 - 텍스트형식이며 UTF-8이다.-라는 것을 명시해준다.
  resp.setContentType("text/html;charset=UTF-8");


PrintWriter out = resp.getWriter(); 
프로그램에 무엇을 쓸지 설정 
//내용
out.println("<html>");
		out.println("<head>");
		out.println("<meta charset='UTF-8'>");
		out.println("<title>Hello </title>");
		out.println("</head>");
		out.println("<body>");
		out.println("Hello");
		out.println("</body>");
		out.println("</html>");
		out.println("안녕하세요");
		out.println("DDD");

	}
  
}  
  
--------------------------------------------------------------------------------------------------
요청과 응답하기 
WEB-INF 폴더에
HTML 파일을 생성후
하이퍼링크 등 다른 페이지로 이동하는 속성값에 src에서 만든 servlet의 웹서블렛 주소(@WebServlet("/gugudan1.do"))
를 써준다.
src 폴더에서 
만약 web-inf 폴더에서의 요청 중 이름을 통해 특정 정보를 가지고 와 프로그래밍에 적용하기 위해선 
(req.getParameter("식별값")을 써준다. 

ex)
요청하는 곳에서 
text에 어떠한 숫자 값을 써주고 submit 버튼을 누르면 
server에서 text에 쓴 수를 받아와 그 수에 대한 구구단을 출력하기 

요청하는 곳 
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>gugudan.html</title>
</head>
<body>
 <a href="./gugudan1.do">구구단 3단 보러가기</a>     <-하이퍼링크에 서버의 주소가 들어간다. 
   <form action="gugudan1.do" method="get">         <-form을 통해서도 갈수가 있다.
   
<input type="text" name="dan" id="" />                <-text창에 이름을 붙였다. 식별자는 중요하게 작용할 수있다. 
 <input type="submit" value="전송">
</form>
</body>
</html>

서버 

@WebServlet("/gugudan1.do")
public class GuGuDan extends HttpServlet {
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String d = req.getParameter("dan");             <-요청하는 곳에서 식별자를 통해 특정 정보를 가지고온다. 
		//null이 나오면 2단을 출력하라 .                <-그리고 프로그램에 적용한다. 
		int dan = 2;
		if (d != null) {
			dan = Integer.parseInt(d);

		}

		//1.한글 설정
		resp.setCharacterEncoding("UTF-8");
		// 2. writer 객체
		PrintWriter out = resp.getWriter();
		// 3. 출력
		out.println("<html>");
		out.println("<head>");
		out.println("<meta charset=' UTF-8'>");

		out.println("<title>구구단 3단</title>");
		out.println("</head>");
		out.println("<body>");
		out.println("<p>3단</p>");
		for (int i = 1; i < 10; i++) {
			out.println("<h4>" + dan + "*" + i + "=" + (dan * i) + "</h4>");

		}
		out.println("</body>");
		out.println("</html>");

	}
}


*서블렛을 사용하는 두번째 방법 
@webservlet 말고 .web.xml에 servlet 추가 하는 것을 통해 servlet을 사용할 수도 있다. 
보통은 webservlet을 사용하지만 프로젝트를 진행하다보면 두번째 방법을 사용하기도 한다. 
사용방법 
1.xml파일 소스의 diplay 다음에 아래의 소스를 입력한다. class 명과 주소명을 입력한다.
	<servlet>
		<servlet-name>monday</servlet-name>
		<servlet-class>day2.monday</servlet-class>
        </servlet>
        <servlet-mapping>
	        <servlet-name>monday</servlet-name>
	        <url-pattern>/monday.do</url-pattern>
	</servlet-mapping> 
	
	






