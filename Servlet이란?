정의 ?
JAVA를 이용하여 웹페이지를 동적으로 생성하는 서버측 프로그램. 
CGI(Common Gateway Interface)로 불리운다.
-CGI는 사용자의 입력을 받아서 동적인 HTML 문서를 만드는 것이다. - 




역할?
웹프로그래밍에서 클라이언트의 요청을 처리하고 그 결과를 다시 클라이언트에게 전송하는 Servlet 클래스의 구현 규칙을 지킨 자바 프로그래밍 기술 
-클라이언트가 HTTP 요청을 하게 되면 그에 맞는 결과(HTML문서 생성 등)를 전송해주는 역할-



JSP와 서블릿 차이 
JSP와 서블릿의 차이점은 결과적으로 하는 일은 동일하다.
Servlet 
1)Java 코드 안에 HTML 코드(하나의 클래스)
2)data processing(Controller)에 좋음
3) DB와의 통신, Business Loginc 호출,데이터를 읽고 확인하는 작업에 유용
4)Servlet이 수정된 경우 Java 코드를 컴파일(.class 파일 생성)한 후 동적인 페이지를 
처리하기 때문에 전체 코드를 업데이트하고 다시 컴파일 한 후 재배포하는 작업이 필요하다.
(개발 생산성이 저하된다)

JSP 
1)HTML 코드 안에 Java코드 (=Java 언어를 기반으로 하는 Server Side 스크립트 언어)
2)presentation(View)에 좋다. 
3)요청 결과를 나타내는 html를 작성하는데 유용하다.
4)JSP가 수정된 경우 재배포할 필요가 없이 WAS가 알아서 처리한다(쉬운 배포)









----------------------------------------------------------------------------------------
서블릿 컨테이너란?
서블릿을 관리해주는 프로그램 .
서블릿 컨테이너는 서블릿의 생명주기를 관리하고 요청에 따른 스레드를 생성해준다. 
또, 클라이언트의 Request를 받아주고 Response를 보낼 수 있게 웹 서버와 소켓을 만들어서 통신을 해준다. 

*통신지원 
서블릿과 웹 서버가 통신할 수 있는 손쉬운 방법을 제공한다. 
통신 process-통신시 필요한 행위 소켓생성>특정 포트 리스닝>연결 요청시 스트림 생성해 요청 수락-를 
서블릿 컨테이너가 대신해준다. 서블릿 컨테이너는 이러한 통신 과정을 API로 제공하고 있기 때문에 우리가 
쉽게 사용이 가능하다. 

*생명주기 관리 
서블릿 컨테이너가 작동되는 순간 서블릿 클래스를 로딩해서 인스턴스화하고, 초기화 메소드를 호출,요청이 들어오면 
적절한 서블릿 메소드를 찾아서 호출한다. 만약 서블릿의 생명이 다하는 순간 가비지 컬렉션을 진행한다. 
-서블릿 생명주기 (servlet Life Cycle)

서블릿 생성 -> init() -> { service() -> doXxx() } -> destory() -> 서블릿 종료 ( {} 반복 )
*멀티스레딩 관리 
서블릿 컨테이너는 해당 서블릿의 요청이 들어오면 스레드를 생성해서 작업을 수행한다. 즉 동시의 
여러 요청이 들어온다면 멀티스레딩 환경으로 동시다발적인 작업을 관리한다. 

*선언적인 보안관리 
서블릿 컨테이너는 보안 관련된 기능을 지원한다. 따라서 서블릿의 코드 안에 보안과 관련된 메소드를 구현하지 
않아도 된다. 
------------------------------------------------------------------------------------------------------------------------
일반적으로 사용자가 만드는 서블릿은 javax.servlet.HTTP.HTTPServlet을 상속받아 구현하게 된다. 
프로그래머가 작성하는 서블릿 클래스는 추상 클래스 HttpServlet에 있는 메소드중 클라이언트 사용자가 
요청한 정보에 따라 처리해야 할 메소드를 오버라이딩 해서 구현한다. 
 doGet() : 클라이언트 HTTP GET 요청에 대해 처리.

 doPost() : 클라이언트 HTTP POST 요청에 대해 처리.

 doPut() : 클라이언트 HTTP PUT 요청에 대해 처리.

 doDelete() : 클라이언트 HTTP DELETE 요청에 대해 처리.

 init() : 서블릿의 생명주기 처리로 가장처음에 실행.

 destory() : 서블릿의 생명주기 처리로 서블릿 객체를 메모리에서 제거할때 마지막으로 실행.





